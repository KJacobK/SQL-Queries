--1. From the following tables, write a SQL query to find all the orders issued by the salesman 'Paul Adam'. Return ord_no, purch_amt, ord_date, customer_id and salesman_id.
SELECT ord_no,
       purch_amt,
       ord_date,
       customer_id,
       salesman_id
FROM   orders
WHERE  salesman_id = (SELECT salesman_id
                      FROM   salesman
                      WHERE  NAME = 'Paul Adam')

-- 2. From the following tables write a SQL query to find all orders generated by London-based salespeople. Return ord_no, purch_amt, ord_date, customer_id, salesman_id.
SELECT ord_no,
       purch_amt,
       ord_date,
       customer_id,
       salesman_id
FROM   orders
WHERE  salesman_id = (SELECT salesman_id
                      FROM   salesman
                      WHERE  city = 'London')

-- 3. From the following tables write a SQL query to find all orders generated by the salespeople who may work for customers whose id is 3007. Return ord_no, purch_amt, ord_date, customer_id, salesman_id.
SELECT ord_no,
       purch_amt,
       ord_date,
       customer_id,
       salesman_id
FROM   orders
WHERE  salesman_id = (SELECT salesman_id
                      FROM   orders
                      WHERE  customer_id = 3007)

-- 4. From the following tables write a SQL query to find the order values greater than the average order value of 10th October 2012. Return ord_no, purch_amt, ord_date, customer_id, salesman_id.
SELECT ord_no,
       purch_amt,
       ord_date,
       customer_id,
       salesman_id
FROM   orders
GROUP  BY ord_no,
          purch_amt,
          ord_date,
          customer_id,
          salesman_id
HAVING purch_amt > (SELECT Avg(purch_amt)
                    FROM   orders
                    WHERE  ord_date = '2012-10-10')

--5. From the following tables, write a SQL query to find all the orders generated in New York city. Return ord_no, purch_amt, ord_date, customer_id and salesman_id.
SELECT ord_no,
       purch_amt,
       ord_date,
       customer_id,
       salesman_id
FROM   orders
WHERE  salesman_id = (SELECT salesman_id
                      FROM   salesman
                      WHERE  city = 'New York')

--6. From the following tables write a SQL query to determine the commission of the salespeople in Paris. Return commission.
SELECT commission
FROM   salesman
WHERE  salesman_id = (SELECT salesman_id
                      FROM   customer
                      WHERE  city = 'Paris');

--7. Write a query to display all the customers whose ID is 2001 below the salesperson ID of Mc Lyon.
SELECT *
FROM   customer
WHERE  customer_id = (SELECT salesman_id - 2001
                      FROM   salesman
                      WHERE  NAME = 'Mc Lyon')

--8. From the following tables write a SQL query to count the number of customers with grades above the average in New York City. Return grade and count. 
SELECT grade,
       Count(*)
FROM   customer
GROUP  BY grade
HAVING grade > (SELECT Avg(grade)
                FROM   customer
                WHERE  city = 'New York')

--9. From the following tables, write a SQL query to find those salespeople who earned the maximum commission. Return ord_no, purch_amt, ord_date, and salesman_id.
SELECT ord_no,
       purch_amt,
       ord_date,
       salesman_id
FROM   orders
WHERE  salesman_id IN (SELECT salesman_id
                       FROM   salesman
                       WHERE  commission = (SELECT Max(commission)
                                            FROM   salesman))

--10. From the following tables write SQL query to find the customers who placed orders on 17th August 2012. Return ord_no, purch_amt, ord_date, customer_id, salesman_id and cust_name.
--11. From the following tables write a SQL query to find salespeople who had more than one customer. Return salesman_id and name.
SELECT salesman_id,
       NAME
FROM   salesman a
WHERE  1 < (SELECT Count(*)
            FROM   customer
            WHERE  salesman_id = a.salesman_id)

--12. From the following tables write a SQL query to find those orders, which are higher than the average amount of the orders. Return ord_no, purch_amt, ord_date, customer_id and salesman_id.
SELECT ord_no,
       purch_amt,
       ord_date,
       customer_id,
       salesman_id
FROM   orders
WHERE  purch_amt > (SELECT Avg(purch_amt)
                    FROM   orders)

--13. From the following tables write a SQL query to find those orders that are equal or higher than the average amount of the orders. Return ord_no, purch_amt, ord_date, customer_id and salesman_id.
--14. Write a query to find the sums of the amounts from the orders table, grouped by date, and eliminate all dates where the sum was not at least 1000.00 above the maximum order amount for that date.
SELECT ord_date,
       Sum(purch_amt)
FROM   orders a
GROUP  BY ord_date
HAVING Sum(purch_amt) > (SELECT 1000 + Max(purch_amt)
                         FROM   orders b
                         WHERE  a.ord_date = b.ord_date)

--15. Write a query to extract all data from the customer table if and only if one or more of the customers in the customer table are located in London.
SELECT *
FROM   customer
WHERE  EXISTS (SELECT *
               FROM   customer
               WHERE  city = 'London') 
